---
- name: 10000 - SETUP REPO.
  git:
    repo: "{{ https_repo }}"
    dest: "{{ working_dir }}"

- name: 10010 - TEST NOTHING TO COMMIT.
  register: result
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    add: [ "." ]
    comment: "Nothing to commit"
    url: "{{ https_repo }}"
- debug: var=result
- assert: { that: not result.changed }

- name: 10020 - FAIL ADD NOT EXISTING FILE.
  register: result
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add not existing file"
    add: [ i_do_not_exsisit.txt ]
    url: "{{ https_repo }}"
- debug: var=result
- assert: { that: not result.changed }

- name: 10030 - CREATE RANDOM FILE NAME.
  set_fact:
    file1: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: 10040 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file1 }}"

- name: 10050 - ADD "{{ file1 }}" VIA HTTPS.
  register: result
  environment:
    GIT_AUTHOR_NAME: "me"
    GIT_AUTHOR_EMAIL: "me@me.me"
    GIT_COMMITTER_NAME: "me"
    GIT_COMMITTER_EMAIL: "me@me.me"
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
- debug: var=result
- assert: { that: result.changed }

- name: 10060 - RM "{{ file1 }}".
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "absent"
  loop:
    - "{{ file1 }}"

- name: 10070 - PUSH REMOVE "{{ file1 }}" VIA HTTPS + FORCE.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Remove {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
    push_force: true
- debug: var=result
- assert: { that: result.changed }

- name: 10080 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file1 }}"

- name: 10090 - ASSERT WARNING MESSAGE SSH PARAMS ON HTTPS URL.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
    ssh_params:
      accept_hostkey: true
      key_file: '{{ github_ssh_private_key }}'
      ssh_opts: '-o UserKnownHostsFile=/tmp/known_hosts'
- debug: var=result
- assert: { that: result.warnings }

- name: 10100 - FAIL BECAUS ssh:// IN GITHUB URL.
  register: result
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "fail because ssh in GitHub"
    add: [ "." ]
    url: "ssh://git@github.com:lvrfrc87/git-acp-test.git"
  ignore_errors: true
- debug: var=result
- assert: { that: result is failed }

- name: 10110 - CREATE A TEMPORARY ORIGIN DIRECTORY.
  register: _pull_src
  tempfile:
    state: directory

- name: 10120 - CREATE A TEMPORARY DESTINATION DIRECTORY.
  register: _pull_dest
  tempfile:
    state: directory

- name: 10130 - INIT REPO IN ORIGIN DIRECTORY.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  shell:
    chdir: "{{ _pull_src.path }}"
    cmd: |
      git init
      touch a.txt
      git add -A
      git checkout -b main
      git commit -m 'commit 1'

- name: 10140 - CLONE INTO DESTINATION.
  git:
    repo: "{{ _pull_src.path }}"
    dest: "{{ _pull_dest.path }}"

- name: 10150 - EVOLVE SOURCE REPO.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  shell:
    chdir: "{{ _pull_src.path }}"
    cmd: |
      touch b.txt
      git add -A
      git commit -m 'commit 2'

- name: 10160 - ADD A FILE TO DESTINATION REPO.
  file:
    path: "{{ _pull_dest.path }}/c.txt"
    state: touch

- name: 10170 - FAIL WITHOUTH PULL.
  register: _acp
  ignore_errors: true
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: [ "c.txt" ]
    branch: main
    comment: commit 3
    path: "{{ _pull_dest.path }}"
    url: "{{ _pull_src.path }}"
- assert: {that: _acp is failed}

- name: 10180 - WORKS WITH PULL FIRST.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: [ "c.txt" ]
    branch: main
    comment: commit 3
    path: "{{ _pull_dest.path }}"
    pull: true
    url: "{{ _pull_src.path }}"

- name: 10190 - CREATE RANDOM FILE NAME.
  set_fact:
    file2: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: 10200 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file2 }}"

- name: 10210 - ADD {{ file2 }} ONLY.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: 
      - "{{ file2 }}"
    branch: "master"
    comment: "Add {{ file2 }}"
    path: "{{ working_dir }}"
    push: false
    url: "{{ https_repo }}"
- assert: {that: file2 in result.git_commit.output}

# - name: 10220 - PUSH {{ file2 }}.
#   register: result
#   environment:
#     GIT_AUTHOR_NAME: me
#     GIT_AUTHOR_EMAIL: me@me.me
#     GIT_COMMITTER_NAME: me
#     GIT_COMMITTER_EMAIL: me@me.me
#   git_acp:
#     branch: "master"
#     path: "{{ working_dir }}"
#     url: "{{ https_repo }}"
# - assert: {that: file2 in result.output}
