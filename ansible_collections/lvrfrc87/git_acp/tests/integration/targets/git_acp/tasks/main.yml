---
- name: 10000 - SETUP REPO.
  git:
    repo: "{{ https_repo }}"
    dest: "{{ working_dir }}"

- name: 10010 - TEST NOTHING TO COMMIT.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    add: [ "." ]
    comment: "Nothing to commit"
    url: "{{ https_repo }}"
- debug: var=result
- assert: { that: not result.changed }

- name: 10020 - FAIL ADD NOT EXISTING FILE.
  register: result
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add not existing file"
    add: [ i_do_not_exsisit.txt ]
    url: "{{ https_repo }}"
  ignore_errors: true
- debug: var=result
- assert: { that: not result.changed }

- name: 10030 - CREATE RANDOM FILE NAME.
  set_fact:
    file1: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: 10040 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file1 }}"

- name: 10050 - ADD "{{ file1 }}" VIA HTTPS.
  register: result
  environment:
    GIT_AUTHOR_NAME: "me"
    GIT_AUTHOR_EMAIL: "me@me.me"
    GIT_COMMITTER_NAME: "me"
    GIT_COMMITTER_EMAIL: "me@me.me"
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
- debug: var=result
- assert: { that: result.changed }

- name: 10060 - RM "{{ file1 }}".
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "absent"
  loop:
    - "{{ file1 }}"

- name: 10070 - PUSH REMOVE "{{ file1 }}" VIA HTTPS + FORCE.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Remove {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
    push_force: true
- debug: var=result
- assert: { that: result.changed }

- name: 10080 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file1 }}"

- name: 10090 - ASSERT WARNING MESSAGE SSH PARAMS ON HTTPS URL.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add {{ file1 }}."
    add: [ "." ]
    url: "{{ https_repo }}"
    ssh_params:
      accept_hostkey: true
      key_file: '{{ github_ssh_private_key }}'
      ssh_opts: '-o UserKnownHostsFile=/tmp/known_hosts'
- debug: var=result
- assert: { that: result.warnings }

- name: 10100 - FAIL BECAUS ssh:// IN GITHUB URL.
  register: result
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "fail because ssh in GitHub"
    add: [ "." ]
    url: "ssh://git@github.com:lvrfrc87/git-acp-test.git"
  ignore_errors: true
- debug: var=result
- assert: { that: result is failed }

- name: 10110 - ADD UNTRACKED AND IGNORED FILES.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "untracked.txt"
    - "ignoreme.txt"
    - ".gitignore"
    - "addme.txt"
    
- name: 10120 - ADD GITIGNORE FILE.
  copy: 
    content: "ignoreme.txt"
    dest: "{{ working_dir }}/.gitignore"

- name: 10120 - ADD ONE FILE ONLY.
  register: result
  environment:
    GIT_AUTHOR_NAME: "me"
    GIT_AUTHOR_EMAIL: "me@me.me"
    GIT_COMMITTER_NAME: "me"
    GIT_COMMITTER_EMAIL: "me@me.me"
  git_acp:
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Add addme.txt."
    add: [ "addme.txt" ]
    url: "{{ https_repo }}"
    clean: "all"
- debug: var=result
- assert: { that: result is changed }

- meta: end_play

- name: 10110 - CREATE A TEMPORARY ORIGIN DIRECTORY.
  register: _pull_src
  tempfile:
    state: directory

- name: 10120 - CREATE A TEMPORARY DESTINATION DIRECTORY.
  register: _pull_dest
  tempfile:
    state: directory

- name: 10130 - INIT REPO IN ORIGIN DIRECTORY.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  shell:
    chdir: "{{ _pull_src.path }}"
    cmd: |
      git init
      touch a.txt
      git add -A
      git checkout -b main
      git commit -m 'commit 1'

- name: 10140 - CLONE INTO DESTINATION.
  git:
    repo: "{{ _pull_src.path }}"
    dest: "{{ _pull_dest.path }}"

- name: 10150 - EVOLVE SOURCE REPO.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  shell:
    chdir: "{{ _pull_src.path }}"
    cmd: |
      touch b.txt
      git add -A
      git commit -m 'commit 2'

- name: 10160 - ADD A FILE TO DESTINATION REPO.
  file:
    path: "{{ _pull_dest.path }}/c.txt"
    state: touch

- name: 10170 - FAIL WITHOUTH PULL.
  register: _acp
  ignore_errors: true
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: [ "c.txt" ]
    branch: main
    comment: commit 3
    path: "{{ _pull_dest.path }}"
    url: "{{ _pull_src.path }}"
- assert: {that: _acp is failed}

- name: 10180 - WORKS WITH PULL FIRST.
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: [ "c.txt" ]
    branch: main
    comment: commit 3
    path: "{{ _pull_dest.path }}"
    pull: true
    url: "{{ _pull_src.path }}"

- name: 10190 - CREATE RANDOM FILE NAME.
  set_fact:
    file2: "{{ lookup('pipe','date +%s%N') }}.txt"
    file3: "{{ lookup('pipe','date +%s%N') }}.txt"
    file4: "{{ lookup('pipe','date +%s%N') }}.txt"

- name: 10200 - CREATE RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "touch"
  loop:
    - "{{ file2 }}"
    - "{{ file3 }}"
    - "{{ file4 }}"

- name: 10210 - ADD {{ file2 }} ONLY.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    add: 
      - "{{ item }}"
    branch: "master"
    comment: "Add {{ item }}"
    path: "{{ working_dir }}"
    push: false
    url: "{{ https_repo }}"
  loop:
      - "{{ file2 }}"
      - "{{ file3 }}"
- debug: var=result
- assert: {that: result.changed}

- name: 10220 - PUSH {{ file2 }}, {{ file3 }} ALONG WITH {{ file4 }}.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    branch: "master"
    path: "{{ working_dir }}"
    url: "{{ https_repo }}"
    comment: "Add {{ file4 }}"
- debug: var=result
- assert: { that: result.changed }

- name: 10230 - RM RANDOM FILE.
  file:
    path: "{{ working_dir }}{{ item }}"
    state: "absent"
  loop:
    - "{{ file2 }}"
    - "{{ file3 }}"
    - "{{ file4 }}"

- name: 10240 - CREATE TEMP DIRECTORY
  tempfile:
    state: directory
    suffix: .test
  register: remote_tmp_dir

- name: 10250 - CHECK ACCEPT HOSTKEY SUPPORT
  shell: ssh -o StrictHostKeyChecking=accept-new -V
  register: ssh_supports_accept_hostkey
  ignore_errors: true

- name: 10260 - MISSING HOSTKEY TEST
  when: ssh_supports_accept_hostkey.rc != 0
  block:
    - name: 10260 - ACCEPT_HOSTKEY WHEN SSH DOES NOT SUPPORT THE OPTION
      register: result
      environment:
        GIT_AUTHOR_NAME: me
        GIT_AUTHOR_EMAIL: me@me.me
        GIT_COMMITTER_NAME: me
        GIT_COMMITTER_EMAIL: me@me.me
      git_acp:
        url: "{{ ssh_repo }}"
        path: "{{ working_dir }}"
        branch: "master"
        comment: "Remove {{ file2 }}"
        add: [ "{{ file2 }}" ]
        ssh_params:
          accept_hostkey: true
          key_file: '{{ github_ssh_private_key }}'
          ssh_opts: '-o UserKnownHostsFile={{ remote_tmp_dir }}/known_hosts'
      ignore_errors: true
    - debug: var=result
    - assert: {that: [result is failed, result.warnings is search("does not support")]}

- name: 10270 - FAIL PUSH SSH REPO WITHOUT ACCEPT_HOSTKEY.
  register: result
  environment:
    GIT_AUTHOR_NAME: me
    GIT_AUTHOR_EMAIL: me@me.me
    GIT_COMMITTER_NAME: me
    GIT_COMMITTER_EMAIL: me@me.me
  git_acp:
    url: "{{ ssh_repo }}"
    path: "{{ working_dir }}"
    branch: "master"
    comment: "Remove {{ file3 }}"
    add: [ "{{ file3 }}" ]
    ssh_params:
      ssh_opts: '-o UserKnownHostsFile={{ remote_tmp_dir }}/known_hosts'
  ignore_errors: true
- debug: var=result
- assert: { that: result is failed }

- name: 10280 - VALIDATE SSH WITH PRIVATE HOST KEY
  when: github_ssh_private_key is defined and ssh_supports_accept_hostkey.rc == 0
  block:
    - name: 10280 - CHECKOUT GIT@GITHUB.COM REPO WITH ACCEPT_HOSTKEY (EXPECTED PASS)
      register: result
      environment:
        GIT_AUTHOR_NAME: me
        GIT_AUTHOR_EMAIL: me@me.me
        GIT_COMMITTER_NAME: me
        GIT_COMMITTER_EMAIL: me@me.me
      git_acp:
        path: "{{ working_dir }}"
        branch: master
        comment: "Remove {{ file4 }}"
        add: [ "{{ file4 }}" ]
        url: "{{ ssh_repo }}"
        ssh_params:
          accept_hostkey: true
          key_file: '{{ github_ssh_private_key }}'
          ssh_opts: '-o UserKnownHostsFile={{ remote_tmp_dir }}/known_hosts'
    - debug: var=result
    - assert: {that: git_result is changed}

    - name: 10290 - CREATE RANDOM FILE.
      file:
        path: "{{ working_dir }}{{ item }}"
        state: "touch"
      loop:
        - "{{ file1 }}"

    - name: 10300 - CHECKOUT SSH://GIT@GITHUB.COM REPO WITH ACCEPT_HOSTKEY (EXPECTED PASS)
      register: result
      git_acp:
        path: "{{ working_dir }}"
        branch: master
        comment: "Add {{ file1 }}."
        add: [ "{{ file1 }}" ]
        url: "{{ ssh_repo }}"
        ssh_params:
          accept_hostkey: false # should already have been accepted
          key_file: '{{ github_ssh_private_key }}'
          ssh_opts: '-o UserKnownHostsFile={{ remote_tmp_dir }}/known_hosts'
    - debug: var=result
    - assert: {that: git_result is changed}

    - name: 10310 - REMOVE GITHUB.COM HOSTKEY FROM KNOWN_HOSTS
      lineinfile:
        dest: '{{ remote_tmp_dir }}/known_hosts'
        regexp: "github.com"
        state: absent

    - name: 10174 - DEBUG DEFAULT REMOTE SET
      shell: git -C "{{ working_dir }}" remote get-url --all origin
      register: remote
    - debug: var=remote

- name: 10290 - DELETE TEMP DIRECTORY
  file:
    path: "{{ remote_tmp_dir }}"
    state: absent
  no_log: true
